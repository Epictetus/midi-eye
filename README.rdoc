= midi-eye

Transparent MIDI event listener for Ruby

== Requirements

* {midi-message}[http://github.com/arirusso/midi-message] (gem install midi-message)
* {nibbler}[http://github.com/arirusso/nibbler] (gem install midi-nibbler)
* {unimidi}[http://github.com/arirusso/unimidi] (gem install unimidi)

== Install

  gem install midi-eye
	
== Usage

  # this is an example that takes any note-on messages from a UniMIDI input
  # and sends it to another UniMIDI output, transposed up an octave

  require 'midi-eye'

  include MIDIEye
  include MIDIMessage 

  @input = UniMIDI::Input.first.open
  @output = UniMIDI::Output.first.open

  transpose = Listener.new(@input)

  transpose.on_message(:class => [NoteOn, NoteOff]) do |event|
   
    p "from #{event[:message].note} to #{(event[:message].note + 12)}"
  
    event[:message].note += 12
    @output.puts(event[:message].to_bytes)
  
  end

  transpose.run
  
  # You can also run the listener only in a background thread by using:
  
  Transpose.run(:background => true)
  
  # This will allow you to run multiple listeners concurrently
  
    
== Author

* {Ari Russo}[http://github.com/arirusso] <ari.russo at gmail.com>

== License

Apache 2.0, See the file LICENSE

Copyright (c) 2011 Ari Russo
